//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace WindowsFormsApp1.Estacion {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="EstacionSoap11Binding", Namespace="http://estacion")]
    public partial class Estacion : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback setLogOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHumOperationCompleted;
        
        private System.Threading.SendOrPostCallback setTempOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLumOperationCompleted;
        
        private System.Threading.SendOrPostCallback setLCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback setHumOperationCompleted;
        
        private System.Threading.SendOrPostCallback getLCDOperationCompleted;
        
        private System.Threading.SendOrPostCallback getTempOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Estacion() {
            this.Url = global::WindowsFormsApp1.Properties.Settings.Default.WindowsFormsApp1_Estacion_Estacion;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event setLogCompletedEventHandler setLogCompleted;
        
        /// <remarks/>
        public event setLumCompletedEventHandler setLumCompleted;
        
        /// <remarks/>
        public event getHumCompletedEventHandler getHumCompleted;
        
        /// <remarks/>
        public event setTempCompletedEventHandler setTempCompleted;
        
        /// <remarks/>
        public event getLumCompletedEventHandler getLumCompleted;
        
        /// <remarks/>
        public event setLCDCompletedEventHandler setLCDCompleted;
        
        /// <remarks/>
        public event getIdCompletedEventHandler getIdCompleted;
        
        /// <remarks/>
        public event setHumCompletedEventHandler setHumCompleted;
        
        /// <remarks/>
        public event getLCDCompletedEventHandler getLCDCompleted;
        
        /// <remarks/>
        public event getTempCompletedEventHandler getTempCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setLog", RequestNamespace="http://estacion", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setLog([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string logLine) {
            this.Invoke("setLog", new object[] {
                        logLine});
        }
        
        /// <remarks/>
        public void setLogAsync(string logLine) {
            this.setLogAsync(logLine, null);
        }
        
        /// <remarks/>
        public void setLogAsync(string logLine, object userState) {
            if ((this.setLogOperationCompleted == null)) {
                this.setLogOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLogOperationCompleted);
            }
            this.InvokeAsync("setLog", new object[] {
                        logLine}, this.setLogOperationCompleted, userState);
        }
        
        private void OnsetLogOperationCompleted(object arg) {
            if ((this.setLogCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLogCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setLum", RequestNamespace="http://estacion", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setLum([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string encriptado) {
            this.Invoke("setLum", new object[] {
                        encriptado});
        }
        
        /// <remarks/>
        public void setLumAsync(string encriptado) {
            this.setLumAsync(encriptado, null);
        }
        
        /// <remarks/>
        public void setLumAsync(string encriptado, object userState) {
            if ((this.setLumOperationCompleted == null)) {
                this.setLumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLumOperationCompleted);
            }
            this.InvokeAsync("setLum", new object[] {
                        encriptado}, this.setLumOperationCompleted, userState);
        }
        
        private void OnsetLumOperationCompleted(object arg) {
            if ((this.setLumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getHum", RequestNamespace="http://estacion", ResponseNamespace="http://estacion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getHum() {
            object[] results = this.Invoke("getHum", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getHumAsync() {
            this.getHumAsync(null);
        }
        
        /// <remarks/>
        public void getHumAsync(object userState) {
            if ((this.getHumOperationCompleted == null)) {
                this.getHumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHumOperationCompleted);
            }
            this.InvokeAsync("getHum", new object[0], this.getHumOperationCompleted, userState);
        }
        
        private void OngetHumOperationCompleted(object arg) {
            if ((this.getHumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHumCompleted(this, new getHumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setTemp", RequestNamespace="http://estacion", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setTemp([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string encriptado) {
            this.Invoke("setTemp", new object[] {
                        encriptado});
        }
        
        /// <remarks/>
        public void setTempAsync(string encriptado) {
            this.setTempAsync(encriptado, null);
        }
        
        /// <remarks/>
        public void setTempAsync(string encriptado, object userState) {
            if ((this.setTempOperationCompleted == null)) {
                this.setTempOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTempOperationCompleted);
            }
            this.InvokeAsync("setTemp", new object[] {
                        encriptado}, this.setTempOperationCompleted, userState);
        }
        
        private void OnsetTempOperationCompleted(object arg) {
            if ((this.setTempCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setTempCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getLum", RequestNamespace="http://estacion", ResponseNamespace="http://estacion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getLum() {
            object[] results = this.Invoke("getLum", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLumAsync() {
            this.getLumAsync(null);
        }
        
        /// <remarks/>
        public void getLumAsync(object userState) {
            if ((this.getLumOperationCompleted == null)) {
                this.getLumOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLumOperationCompleted);
            }
            this.InvokeAsync("getLum", new object[0], this.getLumOperationCompleted, userState);
        }
        
        private void OngetLumOperationCompleted(object arg) {
            if ((this.getLumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLumCompleted(this, new getLumCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setLCD", RequestNamespace="http://estacion", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setLCD([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string encriptado) {
            this.Invoke("setLCD", new object[] {
                        encriptado});
        }
        
        /// <remarks/>
        public void setLCDAsync(string encriptado) {
            this.setLCDAsync(encriptado, null);
        }
        
        /// <remarks/>
        public void setLCDAsync(string encriptado, object userState) {
            if ((this.setLCDOperationCompleted == null)) {
                this.setLCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetLCDOperationCompleted);
            }
            this.InvokeAsync("setLCD", new object[] {
                        encriptado}, this.setLCDOperationCompleted, userState);
        }
        
        private void OnsetLCDOperationCompleted(object arg) {
            if ((this.setLCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setLCDCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getId", RequestNamespace="http://estacion", ResponseNamespace="http://estacion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getId() {
            object[] results = this.Invoke("getId", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getIdAsync() {
            this.getIdAsync(null);
        }
        
        /// <remarks/>
        public void getIdAsync(object userState) {
            if ((this.getIdOperationCompleted == null)) {
                this.getIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetIdOperationCompleted);
            }
            this.InvokeAsync("getId", new object[0], this.getIdOperationCompleted, userState);
        }
        
        private void OngetIdOperationCompleted(object arg) {
            if ((this.getIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getIdCompleted(this, new getIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:setHum", RequestNamespace="http://estacion", OneWay=true, Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void setHum([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string encriptado) {
            this.Invoke("setHum", new object[] {
                        encriptado});
        }
        
        /// <remarks/>
        public void setHumAsync(string encriptado) {
            this.setHumAsync(encriptado, null);
        }
        
        /// <remarks/>
        public void setHumAsync(string encriptado, object userState) {
            if ((this.setHumOperationCompleted == null)) {
                this.setHumOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetHumOperationCompleted);
            }
            this.InvokeAsync("setHum", new object[] {
                        encriptado}, this.setHumOperationCompleted, userState);
        }
        
        private void OnsetHumOperationCompleted(object arg) {
            if ((this.setHumCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.setHumCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getLCD", RequestNamespace="http://estacion", ResponseNamespace="http://estacion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getLCD() {
            object[] results = this.Invoke("getLCD", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getLCDAsync() {
            this.getLCDAsync(null);
        }
        
        /// <remarks/>
        public void getLCDAsync(object userState) {
            if ((this.getLCDOperationCompleted == null)) {
                this.getLCDOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetLCDOperationCompleted);
            }
            this.InvokeAsync("getLCD", new object[0], this.getLCDOperationCompleted, userState);
        }
        
        private void OngetLCDOperationCompleted(object arg) {
            if ((this.getLCDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getLCDCompleted(this, new getLCDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:getTemp", RequestNamespace="http://estacion", ResponseNamespace="http://estacion", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return", IsNullable=true)]
        public string getTemp() {
            object[] results = this.Invoke("getTemp", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void getTempAsync() {
            this.getTempAsync(null);
        }
        
        /// <remarks/>
        public void getTempAsync(object userState) {
            if ((this.getTempOperationCompleted == null)) {
                this.getTempOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTempOperationCompleted);
            }
            this.InvokeAsync("getTemp", new object[0], this.getTempOperationCompleted, userState);
        }
        
        private void OngetTempOperationCompleted(object arg) {
            if ((this.getTempCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getTempCompleted(this, new getTempCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void setLogCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void setLumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getHumCompletedEventHandler(object sender, getHumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void setTempCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getLumCompletedEventHandler(object sender, getLumCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLumCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLumCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void setLCDCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getIdCompletedEventHandler(object sender, getIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void setHumCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getLCDCompletedEventHandler(object sender, getLCDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getLCDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getLCDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getTempCompletedEventHandler(object sender, getTempCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getTempCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getTempCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591